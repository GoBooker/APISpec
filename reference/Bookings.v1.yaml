openapi: 3.0.0
info:
  title: Bookings
  version: '1.0'
  description: ''
servers:
  - url: 'http://localhost:3000'
paths:
  /bookings:
    put:
      summary: Create a new booking
      operationId: put-bookings
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      description: Creates a new booking for this user
      security:
        - openIDConnect: []
    get:
      summary: Get all bookings
      operationId: get-bookings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '403':
          description: Forbidden
      description: Gets all bookings for this user
      parameters:
        - schema:
            type: integer
            default: 25
          in: query
          name: limit
          description: Limit the query result set
        - schema:
            type: integer
            default: 0
          in: query
          name: offset
          description: The offset used for pagination
        - schema:
            type: string
            format: date-time
          in: query
          name: after
          description: After is a date in which we want records after
        - schema:
            type: string
            format: date-time
          in: query
          name: before
          description: Before is the date which we want dates before
      security:
        - openIDConnect: []
  '/bookings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get a booking by ID
      tags: []
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
      operationId: get-bookings-id
      security:
        - openIDConnect: []
    delete:
      summary: Delete a booking by id
      operationId: delete-bookings-id
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
      description: ''
      security:
        - openIDConnect: []
  /vehicle/types:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypes'
              examples:
                example-1:
                  value:
                    - label: Standard
                      iconURL: ''
                      passengerSize: 4
                      id: standard
                    - label: Estate
                      iconURL: ''
                      passengerSize: 4
                      id: estate
                    - label: MPV
                      iconURL: ''
                      passengerSize: 6
                      id: mpv
                    - label: Minivan
                      iconURL: ''
                      passengerSize: 8
                      id: minivan
      operationId: get-vehicle-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTypes'
components:
  schemas:
    Booking:
      title: Booking
      type: object
      properties:
        pickupTime:
          type: string
          format: time
        pickupDate:
          type: string
          format: date
        pickupAddress:
          type: string
        viaAddresses:
          type: array
          items:
            type: string
        dropoffAddresses:
          type: string
        vehicleTypeID:
          type: string
        contactName:
          type: string
        contactNumber:
          type: string
        notes:
          type: string
      required:
        - pickupTime
        - pickupDate
        - pickupAddress
        - dropoffAddresses
        - vehicleTypeID
        - contactName
        - contactNumber
    VehicleType:
      title: VehicleType
      type: object
      description: A list of vehicle types
      properties:
        label:
          type: string
        iconURL:
          type: string
        passengerSize:
          type: integer
          minimum: 0
          default: 0
        id:
          type: string
      required:
        - label
        - passengerSize
        - id
    VehicleTypes:
      title: VehicleTypes
      type: array
      description: A array of vehicle types the first of which will always be filled and be the default value
      items:
        $ref: '#/components/schemas/VehicleType'
      x-examples:
        example-1:
          - label: Standard
            iconURL: ''
            passengerSize: 4
            id: standard
          - label: Estate
            iconURL: ''
            passengerSize: 4
            id: estate
          - label: MPV
            iconURL: ''
            passengerSize: 6
            id: mpv
          - label: Minivan
            iconURL: ''
            passengerSize: 8
            id: minivan
  securitySchemes:
    openIDConnect:
      type: openIdConnect
      openIdConnectUrl: 'https://dev-178472.okta.com/.well-known/openid-configuration'
